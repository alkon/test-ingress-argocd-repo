# ./.github/actions/manual-python-setup/action.yml
name: 'Pyenv Python Setup and Dependencies'
description: 'Sets up Python using pyenv and installs dependencies.'
inputs:
  python-version:
    description: 'The Python version to set up (e.g., "3.13").'
    required: true
  requirements-path:
    description: 'Path to the requirements.txt file (e.g., "app/requirements.txt").'
    required: true

runs:
  using: "composite"
  steps:
    - name: Export Pyenv Base Environment Variables
      shell: bash
      run: |
        # These are simple key=value pairs, correctly exported to GITHUB_ENV
        echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV
        echo "PATH=$HOME/.pyenv/bin:$PATH" >> $GITHUB_ENV
        
        echo "Pyenv base environment variables (PYENV_ROOT, PATH) exported for subsequent steps."

    - name: Install Python via pyenv
      shell: bash
      run: |
        # CRUCIAL: Evaluate pyenv init for this specific step's shell context.
        # This must be at the beginning of any 'run' block that uses pyenv commands or the installed Python.
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)" # Only if you use pyenv virtualenvs
        
        PYTHON_VERSION="${{ inputs.python-version }}"
        echo "Attempting to install Python $PYTHON_VERSION via pyenv..."
        
        # Check if Python version is already installed by pyenv
        if pyenv versions --bare | grep -q "^$PYTHON_VERSION$"; then
          echo "Python $PYTHON_VERSION is already installed via pyenv. Skipping installation."
        else
          # Install the specific Python version
          # This might take a while as pyenv downloads and compiles/installs Python
          pyenv install "$PYTHON_VERSION"
        fi
        
        # Set the local Python version for this directory/job
        # This creates a .python-version file in your GITHUB_WORKSPACE
        pyenv local "$PYTHON_VERSION"
        echo "pyenv local set to $PYTHON_VERSION"
        
        # Verify Python version
        echo "Verifying Python version:"
        python --version
        python3 --version # Often preferred on macOS/Linux
        pip --version

    - name: Install Python Dependencies
      shell: bash
      run: |
        # CRUCIAL: Re-evaluate pyenv init for this specific step's shell context
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)" # Only if you use pyenv virtualenvs
        
        echo "Installing Python dependencies from ${{ inputs.requirements-path }}..."
        pip install -r ${{ inputs.requirements-path }}
        echo "Dependencies installed."