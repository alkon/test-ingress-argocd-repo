# .github/workflows/deploy-argocd-app.yaml
name: Deploy ArgoCD HTTP Ingress and Nginx App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    paths:
      - 'argocd-ingress/argocd-ingress-http.yaml' # CORRECTED path in filter (removed -modified)
      - 'argocd-apps/nginx-app.yaml'
      - 'k8s-manifests/nginx/**' # Trigger if Nginx manifests change
      - '.github/workflows/deploy-argocd-app.yaml' # Explicitly include workflow file itself

jobs:
  deploy:
    runs-on: self-hosted # Use your self-hosted GitHub Actions runner
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # The 'Set up Kubeconfig' step has been REMOVED.
    # It is assumed that the kubeconfig file is already configured
    # on your self-hosted runner machine at /Users/alex/.kube/config.

    - name: Apply Modified ArgoCD Ingress (HTTP)
      # Assuming you will place argocd-ingress-http-modified.yaml in 'argocd-ingress/'
      # NOTE: This 'run' command still refers to the '-modified' file name.
      # If your actual file is named 'argocd-ingress-http.yaml', you will need to update this line too.
      run: kubectl apply -f argocd-ingress/argocd-ingress-http-modified.yaml

    - name: Apply ArgoCD Nginx Application
      # This will create the ArgoCD Application resource.
      # ArgoCD will then automatically sync and deploy the Nginx manifests
      # from your repository to your cluster.
      run: kubectl apply -f argocd-apps/nginx-app.yaml

    - name: Verify ArgoCD Application Status
      run: |
        echo "Waiting for ArgoCD application 'nginx-test-app' to sync..."
        kubectl wait --for=condition=Ready application/nginx-test-app -n argocd --timeout=5m
        kubectl get application nginx-test-app -n argocd -o yaml
