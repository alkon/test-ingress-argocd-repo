name: Publish Python App & Helm Chart

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build Docker Image
#        run: |
#          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-world:latest ./app
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-world:latest

      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hello-world:latest

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0


      # Imporatnt! Runs on Linux (not macOs) only
      # 1. Logs in to the OCI registry
      # 2. Runs helm package
      # 3. Runs helm push

#      - name: Push Helm Chart to Docker Hub OCI
#        uses: bsord/helm-push@v4
#        with:
#          useOCI: true
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#          registry-url: oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}
#          chart-folder: ./helm/hello-chart

#      - name: Package & Push Helm Chart to Docker Hub OCI (macOS compatible)
#        run: |
#          echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login registry-1.docker.io \
#            --username ${{ secrets.DOCKERHUB_USERNAME }} \
#            --password-stdin
#
#          helm package ./helm/hello-chart
#          helm push hello-chart-0.1.0.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}


# Note: awk grabs the generated .tgz filename (last word of the Helm output)
- name: Package & Push Helm Chart to Docker Hub OCI (auto version)
  run: |
    echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login registry-1.docker.io \
      --username ${{ secrets.DOCKERHUB_USERNAME }} \
      --password-stdin

    CHART_DIR="./helm/hello-chart"
    CHART_PACKAGE=$(helm package "$CHART_DIR" --destination . | awk '{print $NF}')
    helm push "$CHART_PACKAGE" oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}


