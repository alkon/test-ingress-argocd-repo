name: Deploy ArgoCD App (OCI)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish Python App & Helm Chart"]
    types:
      - completed

jobs:
  deploy:
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    runs-on: self-hosted

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Download Chart Version Artifact
        uses: actions/download-artifact@v4
        with:
          name: chart-version

      - name: Prepare Application Manifest from Template
        run: |
          CHART_VERSION=$(cat chart-version.txt)
          export CHART_VERSION
          export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          envsubst < argocd-apps/hello-chart-app.yaml.template > argocd-apps/hello-chart-app.yaml

      - name: Apply ArgoCD Application
        run: |
          kubectl apply -f argocd-apps/hello-chart-app.yaml

      - name: Sync ArgoCD App
        uses: argoproj/argo-cd-action@v0.1.0
        with:
          args: app sync hello-chart-app --grpc-web
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}

      - name: Wait for ArgoCD App to be Healthy
        uses: argoproj/argo-cd-action@v0.1.0
        with:
          args: app wait hello-chart-app --operation --health --timeout 90s --grpc-web
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
